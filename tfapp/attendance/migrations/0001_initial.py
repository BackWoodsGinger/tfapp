# Generated by Django 5.1.5 on 2025-03-29 17:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('executive', 'Executive'), ('manager', 'Manager'), ('supervisor', 'Supervisor'), ('group_lead', 'Group Lead'), ('team_lead', 'Team Lead'), ('user', 'User')], default='user', max_length=20)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('is_part_time', models.BooleanField(default=False)),
                ('is_exempt', models.BooleanField(default=False)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('service_date', models.DateField(blank=True, null=True)),
                ('pto_balance', models.FloatField(default=0.0)),
                ('personal_time_balance', models.FloatField(default=0.0)),
                ('final_pto_balance', models.FloatField(default=0.0)),
                ('hours_worked', models.FloatField(default=0.0)),
                ('group_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_members', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisees', to=settings.AUTH_USER_MODEL)),
                ('team_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_members', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurrence_type', models.CharField(choices=[('Planned', 'Planned'), ('Unplanned', 'Unplanned')], max_length=20)),
                ('subtype', models.CharField(choices=[('Tardy In Grace', 'Tardy In Grace'), ('Tardy Out of Grace', 'Tardy Out of Grace'), ('Exchange', 'Exchange'), ('FMLA', 'Family Medical Leave'), ('LOA', 'Leave of Absence'), ('Transportation', 'Transportation'), ('Weather Unpaid', 'Inclement Weather - Unpaid'), ('Weather Paid', 'Inclement Weather - Paid'), ('Bereavement Paid', 'Bereavement - Paid'), ('Bereavement Unpaid', 'Bereavement - Unpaid'), ('Jury Duty Paid', 'Jury Duty - Paid'), ('Jury Duty Unpaid', 'Jury Duty - Unpaid'), ('Discipline', 'Discipline'), ('Work Comp', 'Work Comp'), ('Disability', 'Disability')], max_length=50)),
                ('date', models.DateField()),
                ('duration_hours', models.FloatField(default=0.0)),
                ('pto_applied', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
